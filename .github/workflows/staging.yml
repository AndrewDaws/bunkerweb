name: Automatic build, test and deploy (STAGING)

on:
  push:
    branches: [staging]

jobs:

  # Containers
  build-bw:
    uses: bunkerity/bunkerweb/.github/workflows/staging-container-build.yml@staging
    with:
      IMAGE: bunkerweb
      DOCKERFILE: src/bw/Dockerfile
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
  build-scheduler:
    uses: bunkerity/bunkerweb/.github/workflows/staging-container-build.yml@staging
    with:
      IMAGE: scheduler
      DOCKERFILE: src/scheduler/Dockerfile
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
  build-autoconf:
    uses: bunkerity/bunkerweb/.github/workflows/staging-container-build.yml@staging
    with:
      IMAGE: autoconf
      DOCKERFILE: src/autoconf/Dockerfile
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
  build-ui:
    uses: bunkerity/bunkerweb/.github/workflows/staging-container-build.yml@staging
    with:
      IMAGE: ui
      DOCKERFILE: src/ui/Dockerfile
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}

  # Linux
  build-ubuntu:
    uses: bunkerity/bunkerweb/.github/workflows/staging-linux-build.yml@staging
    with:
      LINUX: ubuntu
      PACKAGE: deb
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
  build-debian:
    uses: bunkerity/bunkerweb/.github/workflows/staging-linux-build.yml@staging
    with:
      LINUX: debian
      PACKAGE: deb
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
  build-centos:
    uses: bunkerity/bunkerweb/.github/workflows/staging-linux-build.yml@staging
    with:
      LINUX: centos
      PACKAGE: rpm
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
  build-fedora:
    uses: bunkerity/bunkerweb/.github/workflows/staging-linux-build.yml@staging
    with:
      LINUX: fedora
      PACKAGE: rpm
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
  build-redhat:
    uses: bunkerity/bunkerweb/.github/workflows/staging-linux-build.yml@staging
    with:
      LINUX: redhat
      PACKAGE: rpm
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}

  # Code security
  code-security:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ["python"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          config-file: ./.github/codeql.yml
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"
    
  # Create infrastructures
  create-infra-docker:
    needs: [code-security, build-bw, build-scheduler]
    uses: bunkerity/bunkerweb/.github/workflows/staging-create-infra.yml@staging
    with:
      TYPE: docker
    secrets:
      CICD_SECRETS: ${{ secrets.CICD_SECRETS }}
  create-infra-autoconf:
    needs: [code-security, build-bw, build-scheduler, build-autoconf]
    uses: bunkerity/bunkerweb/.github/workflows/staging-create-infra.yml@staging
    with:
      TYPE: autoconf
    secrets:
      CICD_SECRETS: ${{ secrets.CICD_SECRETS }}
  create-infra-swarm:
    needs: [code-security, build-bw, build-scheduler, build-autoconf]
    uses: bunkerity/bunkerweb/.github/workflows/staging-create-infra.yml@staging
    with:
      TYPE: swarm
    secrets:
      CICD_SECRETS: ${{ secrets.CICD_SECRETS }}
  create-infra-k8s:
    needs: [code-security, build-bw, build-scheduler, build-autoconf]
    uses: bunkerity/bunkerweb/.github/workflows/staging-create-infra.yml@staging
    with:
      TYPE: k8s
    secrets:
      CICD_SECRETS: ${{ secrets.CICD_SECRETS }}
  create-infra-linux:
    needs: [code-security, build-bw, build-scheduler, build-autoconf]
    uses: bunkerity/bunkerweb/.github/workflows/staging-create-infra.yml@staging
    with:
      TYPE: k8s
    secrets:
      CICD_SECRETS: ${{ secrets.CICD_SECRETS }}

  # Perform tests
  tests-docker:
    needs: [infra-create-docker]
    runs-on: [self-hosted, bw-docker]
    steps:
      - uses: bunkerity/bunkerweb/.github/workflows/staging-tests.yml@staging
        with:
          TYPE: docker
        secrets:
          PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
          PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
          TEST_DOMAINS: ${{ secrets.TEST_DOMAINS_DOCKER }}
          ROOT_DOMAIN: ${{ secrets.ROOT_DOMAIN }}
  tests-autoconf:
    needs: [infra-create-autoconf]
    runs-on: [self-hosted, bw-autoconf]
    steps:
      - uses: bunkerity/bunkerweb/.github/workflows/staging-tests.yml@staging
        with:
          TYPE: autoconf
        secrets:
          PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
          PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
          TEST_DOMAINS: ${{ secrets.TEST_DOMAINS_AUTOCONF }}
          ROOT_DOMAIN: ${{ secrets.ROOT_DOMAIN }}
  tests-swarm:
    needs: [infra-create-swarm]
    runs-on: [self-hosted, bw-swarm]
    steps:
      - uses: bunkerity/bunkerweb/.github/workflows/staging-tests.yml@staging
        with:
          TYPE: swarm
        secrets:
          PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
          PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
          TEST_DOMAINS: ${{ secrets.TEST_DOMAINS_SWARM }}
          ROOT_DOMAIN: ${{ secrets.ROOT_DOMAIN }}
  tests-k8s:
    needs: [infra-create-k8s]
    runs-on: [ubuntu-latest]
    steps:
      - uses: bunkerity/bunkerweb/.github/workflows/staging-tests.yml@staging
        with:
          TYPE: k8s
        secrets:
          PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
          PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
          TEST_DOMAINS: ${{ secrets.TEST_DOMAINS_KUBERNETES }}
          ROOT_DOMAIN: ${{ secrets.ROOT_DOMAIN }}
  tests-linux:
    needs: [infra-create-k8s]
    runs-on: [self-hosted, bw-linux]
    steps:
      - uses: bunkerity/bunkerweb/.github/workflows/staging-tests.yml@staging
        with:
          TYPE: linux
        secrets:
          PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
          PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
          TEST_DOMAINS: ${{ secrets.TEST_DOMAINS_LINUX }}
          ROOT_DOMAIN: ${{ secrets.ROOT_DOMAIN }}

  # Delete infrastructures
  delete-infra-docker:
    needs: [tests-docker]
    uses: bunkerity/bunkerweb/.github/workflows/staging-delete-infra.yml@staging
    with:
      TYPE: docker
    secrets:
      CICD_SECRETS: ${{ secrets.CICD_SECRETS }}
  delete-infra-autoconf:
    needs: [tests-autoconf]
    uses: bunkerity/bunkerweb/.github/workflows/staging-delete-infra.yml@staging
    with:
      TYPE: autoconf
    secrets:
      CICD_SECRETS: ${{ secrets.CICD_SECRETS }}
  delete-infra-swarm:
    needs: [tests-swarm]
    uses: bunkerity/bunkerweb/.github/workflows/staging-delete-infra.yml@staging
    with:
      TYPE: swarm
    secrets:
      CICD_SECRETS: ${{ secrets.CICD_SECRETS }}
  delete-infra-k8s:
    needs: [tests-k8s]
    uses: bunkerity/bunkerweb/.github/workflows/staging-delete-infra.yml@staging
    with:
      TYPE: k8s
    secrets:
      CICD_SECRETS: ${{ secrets.CICD_SECRETS }}
  delete-infra-linux:
    needs: [tests-linux]
    uses: bunkerity/bunkerweb/.github/workflows/staging-delete-infra.yml@staging
    with:
      TYPE: linux
    secrets:
      CICD_SECRETS: ${{ secrets.CICD_SECRETS }}

  # Push containers
  push-bunkerweb:
    needs: [tests-docker, tests-autoconf, tests-swarm, tests-k8s]
    uses: bunkerity/bunkerweb/.github/workflows/staging-push-docker.yml@staging
    with:
      PRIVATE_IMAGE: bunkerweb-tests:staging
      PUBLIC_IMAGE: bunkerweb:beta
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
  push-scheduler:
    needs: [tests-docker, tests-autoconf, tests-swarm, tests-k8s]
    uses: bunkerity/bunkerweb/.github/workflows/staging-push-docker.yml@staging
    with:
      PRIVATE_IMAGE: scheduler-tests:staging
      PUBLIC_IMAGE: bunkerweb-scheduler:beta
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
  push-autoconf:
    needs: [tests-docker, tests-autoconf, tests-swarm, tests-k8s]
    uses: bunkerity/bunkerweb/.github/workflows/staging-push-docker.yml@staging
    with:
      PRIVATE_IMAGE: autoconf-tests:staging
      PUBLIC_IMAGE: bunkerweb-autoconf:beta
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
  push-ui:
    needs: [tests-docker, tests-autoconf, tests-swarm, tests-k8s]
    uses: bunkerity/bunkerweb/.github/workflows/staging-push-docker.yml@staging
    with:
      PRIVATE_IMAGE: ui-tests:staging
      PUBLIC_IMAGE: bunkerweb-ui:beta
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}

  # Push Linux packages
  push-ubuntu:
    needs: [tests-linux]
    uses: bunkerity/bunkerweb/.github/workflows/staging-push-packagecloud.yml@staging
    with:
      SEPARATOR: _
      SUFFIX: amd64
      REPO: bunkerweb-dev
      LINUX: ubuntu
      VERSION: jammy
      PACKAGE: deb
    secrets:
      PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
  push-debian:
    needs: [tests-linux]
    uses: bunkerity/bunkerweb/.github/workflows/staging-push-packagecloud.yml@staging
    with:
      SEPARATOR: _
      SUFFIX: amd64
      REPO: bunkerweb-dev
      LINUX: debian
      VERSION: bullseye
      PACKAGE: deb
    secrets:
      PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
  push-redhat:
    needs: [tests-linux]
    uses: bunkerity/bunkerweb/.github/workflows/staging-push-packagecloud.yml@staging
    with:
      SEPARATOR: "-"
      SUFFIX: 1.x86_64
      REPO: bunkerweb-dev
      LINUX: el
      VERSION: 8
      PACKAGE: rpm
    secrets:
      PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
  push-fedora:
    needs: [tests-linux]
    uses: bunkerity/bunkerweb/.github/workflows/staging-push-packagecloud.yml@staging
    with:
      SEPARATOR: "-"
      SUFFIX: 1.x86_64
      REPO: bunkerweb-dev
      LINUX: fedora
      VERSION: 37
      PACKAGE: rpm
    secrets:
      PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}