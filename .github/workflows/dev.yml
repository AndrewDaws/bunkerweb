name: Automatic tests (DEV)

permissions: read-all

on:
  push:
    branches: [dev]

jobs:
  # Containers
  build-containers:
    strategy:
      matrix:
        image: [bunkerweb, scheduler, autoconf, ui]
        include:
          - image: bunkerweb
            dockerfile: src/bw/Dockerfile
          - image: scheduler
            dockerfile: src/scheduler/Dockerfile
          - image: autoconf
            dockerfile: src/autoconf/Dockerfile
          - image: ui
            dockerfile: src/ui/Dockerfile
    uses: ./.github/workflows/container-build.yml
    with:
      RELEASE: dev
      CACHE: true
      ARCH: linux/amd64
      IMAGE: ${{ matrix.image }}
      DOCKERFILE: ${{ matrix.dockerfile }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  # Python code security
  code-security:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ["python"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          config-file: ./.github/codeql.yml
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"

  # UI tests
  tests-ui:
    needs: [code-security, build-containers]
    uses: ./.github/workflows/tests-ui.yml
    with:
      RELEASE: dev

  # Core tests
  prepare-tests-core:
    needs: [code-security, build-containers]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - id: set-matrix
        run: |
          tests=$(find ./tests/core/ -maxdepth 1 -mindepth 1 -type d -printf "%f\n" | jq -c --raw-input --slurp 'split("\n")| .[0:-1]')
          echo "::set-output name=tests::$tests"
    outputs:
      tests: ${{ steps.set-matrix.outputs.tests }}
  tests-core:
    needs: prepare-tests-core
    strategy:
      fail-fast: false
      matrix:
        test: ${{ fromJson(needs.prepare-tests-core.outputs.tests) }}
    uses: ./.github/workflows/test-core.yml
    with:
      TEST: ${{ matrix.test }}
      RELEASE: dev

  # Push with dev tag
  push-dev:
    needs: [tests-ui, tests-core]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push BW image
        run: docker pull ghcr.io/bunkerity/$FROM-tests:dev && docker tag ghcr.io/bunkerity/$FROM-tests:dev bunkerity/$TO:dev && docker tag ghcr.io/bunkerity/$FROM-tests:dev ghcr.io/bunkerity/$TO:dev && docker push bunkerity/$TO:dev && docker push ghcr.io/bunkerity/$TO:dev
        env:
          FROM: "bunkerweb"
          TO: "bunkerweb"
      - name: Push scheduler image
        run: docker pull ghcr.io/bunkerity/$FROM-tests:dev && docker tag ghcr.io/bunkerity/$FROM-tests:dev bunkerity/$TO:dev && docker tag ghcr.io/bunkerity/$FROM-tests:dev ghcr.io/bunkerity/$TO:dev && docker push bunkerity/$TO:dev && docker push ghcr.io/bunkerity/$TO:dev
        env:
          FROM: "scheduler"
          TO: "bunkerweb-scheduler"
      - name: Push UI image
        run: docker pull ghcr.io/bunkerity/$FROM-tests:dev && docker tag ghcr.io/bunkerity/$FROM-tests:dev bunkerity/$TO:dev && docker tag ghcr.io/bunkerity/$FROM-tests:dev ghcr.io/bunkerity/$TO:dev && docker push bunkerity/$TO:dev && docker push ghcr.io/bunkerity/$TO:dev
        env:
          FROM: "ui"
          TO: "bunkerweb-ui"
      - name: Push autoconf image
        run: docker pull ghcr.io/bunkerity/$FROM-tests:dev && docker tag ghcr.io/bunkerity/$FROM-tests:dev bunkerity/$TO:dev && docker tag ghcr.io/bunkerity/$FROM-tests:dev ghcr.io/bunkerity/$TO:dev && docker push bunkerity/$TO:dev && docker push ghcr.io/bunkerity/$TO:dev
        env:
          FROM: "autoconf"
          TO: "bunkerweb-autoconf"
