name: Automatic tests (DEV)

permissions: read-all

on:
  push:
    branches: [dev]

jobs:
  # Containers
  build-containers:
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        image: [bunkerweb, scheduler, autoconf, ui]
        include:
          - image: bunkerweb
            dockerfile: src/bw/Dockerfile
          - image: scheduler
            dockerfile: src/scheduler/Dockerfile
          - image: autoconf
            dockerfile: src/autoconf/Dockerfile
          - image: ui
            dockerfile: src/ui/Dockerfile
    uses: ./.github/workflows/container-build.yml
    with:
      RELEASE: dev
      ARCH: linux/amd64
      CACHE: true
      IMAGE: ${{ matrix.image }}
      DOCKERFILE: ${{ matrix.dockerfile }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  # Build Linux packages
  build-packages:
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        linux: [ubuntu, debian, fedora, rhel]
        include:
          - linux: ubuntu
            package: deb
          - linux: debian
            package: deb
          - linux: fedora
            package: rpm
          - linux: rhel
            package: rpm
    uses: ./.github/workflows/linux-build.yml
    with:
      RELEASE: dev
      LINUX: ${{ matrix.linux }}
      PACKAGE: ${{ matrix.package }}
      TEST: true
      PLATFORMS: linux/amd64
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  codeql:
    uses: ./.github/workflows/codeql.yml
    permissions:
      actions: read
      contents: read
      security-events: write

  # UI tests
  tests-ui:
    needs: [build-containers]
    uses: ./.github/workflows/tests-ui.yml
    with:
      RELEASE: dev
  tests-ui-linux:
    needs: [build-packages]
    uses: ./.github/workflows/tests-ui-linux.yml
    with:
      RELEASE: dev

  # Core tests
  prepare-tests-core:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - id: set-matrix
        run: |
          tests=$(find ./tests/core/ -maxdepth 1 -mindepth 1 -type d -printf "%f\n" | jq -c --raw-input --slurp 'split("\n")| .[0:-1]')
          echo "tests=$tests" >> $GITHUB_OUTPUT
    outputs:
      tests: ${{ steps.set-matrix.outputs.tests }}
  tests-core:
    needs: [build-containers, prepare-tests-core]
    strategy:
      fail-fast: false
      matrix:
        test: ${{ fromJson(needs.prepare-tests-core.outputs.tests) }}
    uses: ./.github/workflows/test-core.yml
    with:
      TEST: ${{ matrix.test }}
      RELEASE: dev
  tests-core-linux:
    needs: [build-packages, prepare-tests-core]
    strategy:
      fail-fast: false
      matrix:
        test: ${{ fromJson(needs.prepare-tests-core.outputs.tests) }}
    uses: ./.github/workflows/test-core-linux.yml
    with:
      TEST: ${{ matrix.test }}
      RELEASE: dev
    secrets: inherit

  # Push with dev tag
  push-dev:
    needs: [tests-ui, tests-core]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Login to ghcr
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push BW image
        run: docker pull ghcr.io/bunkerity/$FROM-tests:dev && docker tag ghcr.io/bunkerity/$FROM-tests:dev bunkerity/$TO:dev && docker tag ghcr.io/bunkerity/$FROM-tests:dev ghcr.io/bunkerity/$TO:dev && docker push bunkerity/$TO:dev && docker push ghcr.io/bunkerity/$TO:dev
        env:
          FROM: "bunkerweb"
          TO: "bunkerweb"
      - name: Push scheduler image
        run: docker pull ghcr.io/bunkerity/$FROM-tests:dev && docker tag ghcr.io/bunkerity/$FROM-tests:dev bunkerity/$TO:dev && docker tag ghcr.io/bunkerity/$FROM-tests:dev ghcr.io/bunkerity/$TO:dev && docker push bunkerity/$TO:dev && docker push ghcr.io/bunkerity/$TO:dev
        env:
          FROM: "scheduler"
          TO: "bunkerweb-scheduler"
      - name: Push UI image
        run: docker pull ghcr.io/bunkerity/$FROM-tests:dev && docker tag ghcr.io/bunkerity/$FROM-tests:dev bunkerity/$TO:dev && docker tag ghcr.io/bunkerity/$FROM-tests:dev ghcr.io/bunkerity/$TO:dev && docker push bunkerity/$TO:dev && docker push ghcr.io/bunkerity/$TO:dev
        env:
          FROM: "ui"
          TO: "bunkerweb-ui"
      - name: Push autoconf image
        run: docker pull ghcr.io/bunkerity/$FROM-tests:dev && docker tag ghcr.io/bunkerity/$FROM-tests:dev bunkerity/$TO:dev && docker tag ghcr.io/bunkerity/$FROM-tests:dev ghcr.io/bunkerity/$TO:dev && docker push bunkerity/$TO:dev && docker push ghcr.io/bunkerity/$TO:dev
        env:
          FROM: "autoconf"
          TO: "bunkerweb-autoconf"

  # Push Linux packages
  push-packages:
    needs: [tests-ui-linux, tests-core-linux]
    strategy:
      matrix:
        linux: [ubuntu, debian, fedora, el]
        arch: [amd64]
        include:
          - release: dev
            repo: bunkerweb
          - linux: ubuntu
            separator: _
            suffix: ""
            version: jammy
            package: deb
          - linux: debian
            separator: _
            suffix: ""
            version: bookworm
            package: deb
          - linux: fedora
            separator: "-"
            suffix: "1."
            version: 39
            package: rpm
          - linux: el
            separator: "-"
            suffix: "1."
            version: 8
            package: rpm
          - linux: ubuntu
            arch: amd64
            package_arch: amd64
          - linux: debian
            arch: amd64
            package_arch: amd64
          - linux: fedora
            arch: amd64
            package_arch: x86_64
          - linux: el
            arch: amd64
            package_arch: x86_64
    uses: ./.github/workflows/push-packagecloud.yml
    with:
      SEPARATOR: ${{ matrix.separator }}
      SUFFIX: ${{ matrix.suffix }}
      REPO: ${{ matrix.repo }}
      LINUX: ${{ matrix.linux }}
      VERSION: ${{ matrix.version }}
      PACKAGE: ${{ matrix.package }}
      BW_VERSION: ${{ matrix.release }}
      PACKAGE_ARCH: ${{ matrix.package_arch }}
      ARCH: ${{ matrix.arch }}
    secrets:
      PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
