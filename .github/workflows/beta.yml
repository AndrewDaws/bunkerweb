name: Automatic push (BETA)

permissions: read-all

on:
  push:
    branches: [beta]

jobs:
  # Build BW amd64 + i386 images
  build-bw-amd64:
    uses: ./.github/workflows/container-build.yml
    with:
      RELEASE: beta
      ARCH: linux/amd64
      IMAGE: bunkerweb
      DOCKERFILE: src/bw/Dockerfile
      CACHE: false
      PUSH: false
      CACHE_SUFFIX: "amd64"
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  build-bw-386:
    uses: ./.github/workflows/container-build.yml
    with:
      RELEASE: beta
      ARCH: linux/386
      IMAGE: bunkerweb
      DOCKERFILE: src/bw/Dockerfile
      CACHE: false
      PUSH: false
      CACHE_SUFFIX: "386"
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  # Build SC amd64 + i386 images
  build-sc-amd64:
    uses: ./.github/workflows/container-build.yml
    with:
      RELEASE: beta
      ARCH: linux/amd64
      IMAGE: scheduler
      DOCKERFILE: src/scheduler/Dockerfile
      CACHE: false
      PUSH: false
      CACHE_SUFFIX: "amd64"
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  build-sc-386:
    uses: ./.github/workflows/container-build.yml
    with:
      RELEASE: beta
      ARCH: linux/386
      IMAGE: scheduler
      DOCKERFILE: src/scheduler/Dockerfile
      CACHE: false
      PUSH: false
      CACHE_SUFFIX: "386"
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  # Build AU amd64 + i386 images
  build-au-amd64:
    uses: ./.github/workflows/container-build.yml
    with:
      RELEASE: beta
      ARCH: linux/amd64
      IMAGE: autoconf
      DOCKERFILE: src/autoconf/Dockerfile
      CACHE: false
      PUSH: false
      CACHE_SUFFIX: "amd64"
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  build-au-386:
    uses: ./.github/workflows/container-build.yml
    with:
      RELEASE: beta
      ARCH: linux/386
      IMAGE: autoconf
      DOCKERFILE: src/autoconf/Dockerfile
      CACHE: false
      PUSH: false
      CACHE_SUFFIX: "386"
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  # Build UI amd64 + i386 images
  build-ui-amd64:
    uses: ./.github/workflows/container-build.yml
    with:
      RELEASE: beta
      ARCH: linux/amd64
      IMAGE: ui
      DOCKERFILE: src/ui/Dockerfile
      CACHE: false
      PUSH: false
      CACHE_SUFFIX: "amd64"
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  build-ui-386:
    uses: ./.github/workflows/container-build.yml
    with:
      RELEASE: beta
      ARCH: linux/386
      IMAGE: ui
      DOCKERFILE: src/ui/Dockerfile
      CACHE: false
      PUSH: false
      CACHE_SUFFIX: "386"
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  # Build arm64 + arm/v7 images
  create-arm:
    uses: ./.github/workflows/create-arm.yml
    secrets:
      SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
      SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
      SCW_DEFAULT_PROJECT_ID: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
      SCW_DEFAULT_ORGANIZATION_ID: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}
      ARM_SSH_KEY: ${{ secrets.ARM_SSH_KEY }}
      ARM_SSH_CONFIG: ${{ secrets.ARM_SSH_CONFIG }}
  build-bw-arm:
    needs: [create-arm]
    uses: ./.github/workflows/container-build.yml
    with:
      RELEASE: beta
      ARCH: linux/arm64,linux/arm/v7
      IMAGE: bunkerweb
      DOCKERFILE: src/bw/Dockerfile
      CACHE: false
      PUSH: false
      CACHE_SUFFIX: "arm"
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      ARM_SSH_KEY: ${{ secrets.ARM_SSH_KEY }}
      ARM_SSH_IP: ${{ needs.create-arm.outputs.ip }}
      ARM_SSH_CONFIG: ${{ secrets.ARM_SSH_CONFIG }}
  build-sc-arm:
    needs: [create-arm]
    uses: ./.github/workflows/container-build.yml
    with:
      RELEASE: beta
      ARCH: linux/arm64,linux/arm/v7
      IMAGE: scheduler
      DOCKERFILE: src/scheduler/Dockerfile
      CACHE: false
      PUSH: false
      CACHE_SUFFIX: "arm"
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      ARM_SSH_KEY: ${{ secrets.ARM_SSH_KEY }}
      ARM_SSH_IP: ${{ needs.create-arm.outputs.ip }}
      ARM_SSH_CONFIG: ${{ secrets.ARM_SSH_CONFIG }}
  build-au-arm:
    needs: [create-arm]
    uses: ./.github/workflows/container-build.yml
    with:
      RELEASE: beta
      ARCH: linux/arm64,linux/arm/v7
      IMAGE: autoconf
      DOCKERFILE: src/autoconf/Dockerfile
      CACHE: false
      PUSH: false
      CACHE_SUFFIX: "arm"
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      ARM_SSH_KEY: ${{ secrets.ARM_SSH_KEY }}
      ARM_SSH_IP: ${{ needs.create-arm.outputs.ip }}
      ARM_SSH_CONFIG: ${{ secrets.ARM_SSH_CONFIG }}
  build-ui-arm:
    needs: [create-arm]
    uses: ./.github/workflows/container-build.yml
    with:
      RELEASE: beta
      ARCH: linux/arm64,linux/arm/v7
      IMAGE: ui
      DOCKERFILE: src/ui/Dockerfile
      CACHE: false
      PUSH: false
      CACHE_SUFFIX: "arm"
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      ARM_SSH_KEY: ${{ secrets.ARM_SSH_KEY }}
      ARM_SSH_IP: ${{ needs.create-arm.outputs.ip }}
      ARM_SSH_CONFIG: ${{ secrets.ARM_SSH_CONFIG }}

  # Linux packages
  build-ubuntu:
    uses: ./.github/workflows/linux-build.yml
    with:
      RELEASE: beta
      LINUX: ubuntu
      PACKAGE: deb
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
  build-debian:
    uses: ./.github/workflows/linux-build.yml
    with:
      RELEASE: beta
      LINUX: debian
      PACKAGE: deb
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
  # build-centos:
  #   uses: ./.github/workflows/linux-build.yml
  #   with:
  #     RELEASE: beta
  #     LINUX: centos
  #     PACKAGE: rpm
  #   secrets:
  #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  #     DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  #     PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
  #     PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
  build-fedora:
    uses: ./.github/workflows/linux-build.yml
    with:
      RELEASE: beta
      LINUX: fedora
      PACKAGE: rpm
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}
  build-rhel:
    uses: ./.github/workflows/linux-build.yml
    with:
      RELEASE: beta
      LINUX: rhel
      PACKAGE: rpm
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      PRIVATE_REGISTRY: ${{ secrets.PRIVATE_REGISTRY }}
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.PRIVATE_REGISTRY_TOKEN }}

  # Wait for all builds and extract VERSION
  wait-builds:
    runs-on: ubuntu-latest
    needs: [
      build-bw-amd64, build-bw-386,
      build-sc-amd64, build-sc-386,
      build-au-amd64, build-au-386,
      build-ui-amd64, build-ui-386,
      build-bw-arm, build-sc-arm, build-au-arm, build-ui-arm,
      build-ubuntu,
      build-debian,
      build-fedora,
      build-rhel
    ]
    outputs:
      version: ${{ steps.getversion.outputs.version }}
      versionrpm: ${{ steps.getversionrpm.outputs.versionrpm }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Get VERSION
        id: getversion
        run: echo "version=$(cat src/VERSION | tr -d '\n')" >> "$GITHUB_OUTPUT"
      - name: Get VERSION (for RPM based)
        id: getversionrpm
        run: echo "versionrpm=$(cat src/VERSION | tr -d '\n' | sed 's/-/_/g')" >> "$GITHUB_OUTPUT"

  # Push Docker images
  push-bunkerweb:
    needs: [create-arm, wait-builds]
    uses: ./.github/workflows/push-docker.yml
    with:
      IMAGE: bunkerity/bunkerweb:beta,bunkerity/bunkerweb:${{ needs.wait-builds.outputs.version }}
      CACHE_FROM: bunkerweb-beta
      DOCKERFILE: src/bw/Dockerfile
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      ARM_SSH_KEY: ${{ secrets.ARM_SSH_KEY }}
      ARM_SSH_IP: ${{ needs.create-arm.outputs.ip }}
      ARM_SSH_CONFIG: ${{ secrets.ARM_SSH_CONFIG }}
  push-scheduler:
    needs: [create-arm, wait-builds]
    uses: ./.github/workflows/push-docker.yml
    with:
      IMAGE: bunkerity/bunkerweb-scheduler:beta,bunkerity/bunkerweb-scheduler:${{ needs.wait-builds.outputs.version }}
      CACHE_FROM: scheduler-beta
      DOCKERFILE: src/scheduler/Dockerfile
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      ARM_SSH_KEY: ${{ secrets.ARM_SSH_KEY }}
      ARM_SSH_IP: ${{ needs.create-arm.outputs.ip }}
      ARM_SSH_CONFIG: ${{ secrets.ARM_SSH_CONFIG }}
  push-autoconf:
    needs: [create-arm, wait-builds]
    uses: ./.github/workflows/push-docker.yml
    with:
      IMAGE: bunkerity/bunkerweb-autoconf:beta,bunkerity/bunkerweb-autoconf:${{ needs.wait-builds.outputs.version }}
      CACHE_FROM: autoconf-beta
      DOCKERFILE: src/autoconf/Dockerfile
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      ARM_SSH_KEY: ${{ secrets.ARM_SSH_KEY }}
      ARM_SSH_IP: ${{ needs.create-arm.outputs.ip }}
      ARM_SSH_CONFIG: ${{ secrets.ARM_SSH_CONFIG }}
  push-ui:
    needs: [create-arm, wait-builds]
    uses: ./.github/workflows/push-docker.yml
    with:
      IMAGE: bunkerity/bunkerweb-ui:beta,bunkerity/bunkerweb-ui:${{ needs.wait-builds.outputs.version }}
      CACHE_FROM: ui-beta
      DOCKERFILE: src/ui/Dockerfile
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      ARM_SSH_KEY: ${{ secrets.ARM_SSH_KEY }}
      ARM_SSH_IP: ${{ needs.create-arm.outputs.ip }}
      ARM_SSH_CONFIG: ${{ secrets.ARM_SSH_CONFIG }}

  # Push Linux packages
  push-ubuntu:
    needs: [wait-builds]
    uses: ./.github/workflows/push-packagecloud.yml
    with:
      SEPARATOR: _
      SUFFIX: amd64
      SUFFIX2: -1_amd64
      REPO: bunkerweb
      LINUX: ubuntu
      VERSION: jammy
      PACKAGE: deb
      BW_VERSION: ${{ needs.wait-builds.outputs.version }}
    secrets:
      PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
  push-debian:
    needs: [wait-builds]
    uses: ./.github/workflows/push-packagecloud.yml
    with:
      SEPARATOR: _
      SUFFIX: amd64
      SUFFIX2: -1_amd64
      REPO: bunkerweb
      LINUX: debian
      VERSION: bullseye
      PACKAGE: deb
      BW_VERSION: ${{ needs.wait-builds.outputs.version }}
    secrets:
      PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
  push-rhel:
    needs: [wait-builds]
    uses: ./.github/workflows/push-packagecloud.yml
    with:
      SEPARATOR: "-"
      SUFFIX: 1.x86_64
      SUFFIX2: -1.x86_64
      REPO: bunkerweb
      LINUX: el
      VERSION: 8
      PACKAGE: rpm
      BW_VERSION: ${{ needs.wait-builds.outputs.versionrpm }}
    secrets:
      PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
  push-fedora:
    needs: [wait-builds]
    uses: ./.github/workflows/push-packagecloud.yml
    with:
      SEPARATOR: "-"
      SUFFIX: 1.x86_64
      SUFFIX2: -1.x86_64
      REPO: bunkerweb
      LINUX: fedora
      VERSION: 37
      PACKAGE: rpm
      BW_VERSION: ${{ needs.wait-builds.outputs.versionrpm }}
    secrets:
      PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}

  # Create doc PDF
  doc-pdf:
    needs: [
      wait-builds,
      push-bunkerweb,
      push-scheduler,
      push-autoconf,
      push-ui,
      push-ubuntu,
      push-debian,
      push-rhel,
      push-fedora
    ]
    uses: ./.github/workflows/doc-to-pdf.yml
    with:
      VERSION: ${{ needs.wait-builds.outputs.version }}

  # Push on GH
  push-gh:
    needs: [wait-builds, doc-pdf]
    permissions:
      contents: write
      discussions: write
    uses: ./.github/workflows/push-github.yml
    with:
      VERSION: ${{ needs.wait-builds.outputs.version }}
      PRERELEASE: true

  # Push doc
  push-doc:
    needs: [wait-builds, push-gh]
    permissions:
      contents: write
    uses: ./.github/workflows/push-doc.yml
    with:
      VERSION: ${{ needs.wait-builds.outputs.version }}
      ALIAS: beta

  # Remove ARM VM
  rm-arm:
    if: ${{ always() }}
    needs: [create-arm, push-bunkerweb, push-scheduler, push-autoconf, push-ui]
    uses: ./.github/workflows/rm-arm.yml
    secrets:
      ARM_ID: ${{ needs.create-arm.outputs.id }}
      SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
      SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
      SCW_DEFAULT_PROJECT_ID: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
      SCW_DEFAULT_ORGANIZATION_ID: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}


