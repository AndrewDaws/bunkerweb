version: "3.5"

services:
  bw:
    image: bunkerity/bunkerweb:1.5.5
    pull_policy: never
    depends_on:
      - bw-redis
    labels:
      - "bunkerweb.INSTANCE=yes"
    volumes:
      - ./index.html:/var/www/html/index.html
    environment:
      API_WHITELIST_IP: "127.0.0.0/8 10.20.30.0/24 1.0.0.3"
      HTTP_PORT: "80"
      USE_BUNKERNET: "no"
      SEND_ANONYMOUS_REPORT: "no"
      BLACKLIST_IP_URLS: ""
      LOG_LEVEL: "info"
      SESSIONS_NAME: "test"
      USE_REVERSE_SCAN: "no"
      USE_ANTIBOT: "no"
      USE_GREYLIST: "yes"
      GREYLIST_IP: "0.0.0.0/0"
      WHITELIST_COUNTRY: "AU"

      # ? REDIS settings
      USE_REDIS: "yes"
      REDIS_SENTINEL_HOSTS: "bw-sentinel-1 bw-sentinel-2 bw-sentinel-3"
      REDIS_SENTINEL_MASTER: "mymasterset"
      REDIS_DATABASE: "0"
      REDIS_SSL: "no"
      CUSTOM_CONF_SERVER_HTTP_ready: |
        location /ready {
          default_type 'text/plain';
          rewrite_by_lua_block {
            ngx.print('ready')
            ngx.flush(true)
            ngx.exit(ngx.HTTP_OK)
          }
        }
    networks:
      bw-universe:
      bw-services:
        ipv4_address: 1.0.0.2

  bw-scheduler:
    image: bunkerity/bunkerweb-scheduler:1.5.5
    pull_policy: never
    depends_on:
      - bw
      - bw-docker
    environment:
      DOCKER_HOST: "tcp://bw-docker:2375"
      LOG_LEVEL: "info"
    networks:
      - bw-universe
      - bw-docker

  bw-docker:
    image: tecnativa/docker-socket-proxy:nightly
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      CONTAINERS: "1"
    networks:
      - bw-docker

  bw-redis-master:
    image: 'bitnami/redis:latest'
    environment:
      - REDIS_REPLICATION_MODE=master
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - bw-services

  bw-redis-slave:
    image: 'bitnami/redis:latest'
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=bw-redis-master
      - ALLOW_EMPTY_PASSWORD=yes
    depends_on:
      - bw-redis-master
    networks:
      - bw-services

  bw-sentinel-1:
    image: 'bitnami/redis-sentinel:latest'
    environment:
      - REDIS_MASTER_HOST=bw-redis-master
      - REDIS_MASTER_SET=mymasterset
    depends_on:
      - bw-redis-master
      - bw-redis-slave
    networks:
      - bw-services
  
  bw-sentinel-2:
    image: 'bitnami/redis-sentinel:latest'
    environment:
      - REDIS_MASTER_HOST=bw-redis-master
      - REDIS_MASTER_SET=mymasterset
    depends_on:
      - bw-redis-master
      - bw-redis-slave
    networks:
      - bw-services

  bw-sentinel-3:
    image: 'bitnami/redis-sentinel:latest'
    environment:
      - REDIS_MASTER_HOST=bw-redis-master
      - REDIS_MASTER_SET=mymasterset
    depends_on:
      - bw-redis-master
      - bw-redis-slave
    networks:
      - bw-services

networks:
  bw-universe:
    name: bw-universe
    ipam:
      driver: default
      config:
        - subnet: 10.20.30.0/24
  bw-services:
    name: bw-services
    ipam:
      driver: default
      config:
        - subnet: 1.0.0.0/24
  bw-docker:
    name: bw-docker
