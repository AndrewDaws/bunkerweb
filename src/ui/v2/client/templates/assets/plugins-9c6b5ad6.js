function a(s){return s.forEach(r=>{const c=r.settings;Object.entries(c).forEach(([i,n])=>{"method"in n||(n.method="default")})}),s}function h(s,r){return s.forEach(c=>{const i=c.settings;Object.entries(i).forEach(([t,e])=>{if(!("multiple"in e))try{e.value=r[t].value,e.method=r[t].method,delete r[t]}catch{}});const n=[];Object.entries(i).forEach(([t,e])=>{"multiple"in e&&Object.entries(r).forEach(([o,f])=>{if(!o.startsWith(t))return;const l=JSON.parse(JSON.stringify(e));l.value=f.value,l.method=f.method,n.push({[o]:l})})});for(let t=0;t<n.length;t++){const e=n[t],o=Object.keys(e).join(),f=e[o];i[o]=f}}),s}function u(s,r){return s.forEach((c,i)=>{const n=c.settings;Object.entries(n).forEach(([t,e])=>{e.context===r||delete n[t]}),Object.keys(c.settings).length===0&&delete s[i]}),s.filter(Object)}function d(s,r){return s.forEach((c,i)=>{for(const[n,t]of Object.entries(r)){if(!(n in c)||t==="all")continue;const e=typeof t;let o=!0;if(e==="string"){const f=t.toLowerCase().trim();o=!!c[n].toLowerCase().trim().includes(f)}e==="boolean"&&(o=t===c[n]),o||(s[i]="")}}),s.filter(String)}export{h as a,d as b,u as g,a as s};
