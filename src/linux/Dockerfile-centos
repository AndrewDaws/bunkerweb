FROM quay.io/centos/centos:stream8@sha256:a8692b39e546eed9177d495db1edfd97bb6de70b9527f58aeb72f90b687c3426

ENV OS=centos
ENV NGINX_VERSION 1.24.0

# Copy centos repo
COPY src/linux/centos.repo /etc/yum.repos.d/centos.repo
RUN sed -i "s/%ARCH%/$(uname -m)/g" /etc/yum.repos.d/centos.repo

# Copy RPM-GPG-KEY-CentOS-Official
COPY src/linux/RPM-GPG-KEY-centosofficial /etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial

# Import RPM-GPG-KEY-CentOS-Official
RUN rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial
COPY src/linux/nginx.repo /etc/yum.repos.d/nginx.repo

# Install Nginx, fpm and dependencies
RUN dnf update -y && \
    dnf install -y epel-release dnf-plugins-core && \
    dnf config-manager --set-enabled powertools && \
    dnf install -y --setopt=install_weak_deps=False make gcc \
    python39 python39-devel python39-pip python39-setuptools brotli brotli-devel wget gperftools-devel perl libxslt-devel libxml2 yajl yajl-devel libxslt bash gd gd-devel gcc-c++ kernel-devel curl znc-modtcl libmpc-devel gmp-devel gawk mpfr-devel libtool pcre-devel automake autoconf readline-devel gcc make openssl-devel git zlib-devel libxml2-devel pkgconf libcurl-devel geoip-devel lmdb-libs \
    yum-utils redhat-lsb-core && \
    wget https://nginx.org/packages/rhel/8/$(uname -m)/RPMS/nginx-${NGINX_VERSION}-1.el8.ngx.$(uname -m).rpm && \
    dnf install nginx-${NGINX_VERSION}-1.el8.ngx.$(uname -m).rpm -y && \
    rm -rf nginx-${NGINX_VERSION}-1.el8.ngx.$(uname -m).rpm

WORKDIR /tmp/bunkerweb/deps

# Copy dependencies sources folder
COPY src/deps/misc misc
COPY src/deps/src src
COPY src/deps/deps.json deps.json
COPY src/deps/install.sh install.sh

# Compile and install dependencies
RUN chmod +x install.sh && \
    bash install.sh

# Copy dependencies sources folder
COPY src/deps/requirements.txt /tmp/requirements-deps.txt
COPY src/core/requirements.txt /tmp/req/requirements-core.txt
COPY src/autoconf/requirements.txt /tmp/req/requirements-autoconf.txt
COPY src/ui/requirements.txt /tmp/req/requirements-ui.txt
COPY src/common/gen/requirements.txt /tmp/req/requirements-gen.txt
COPY src/common/db/requirements.txt /tmp/req/requirements-db.txt

WORKDIR /usr/share/bunkerweb

# Compile and install dependencies
RUN export MAKEFLAGS="-j$(nproc)" && \
    mkdir -p deps/python && \
    easy_install-3.9 pip && \
    pip install --no-cache-dir --require-hashes --ignore-installed -r /tmp/requirements-deps.txt && \
    pip install --no-cache-dir --require-hashes --target deps/python $(for file in $(ls /tmp/req/requirements*.txt) ; do echo "-r ${file}" ; done | xargs)

# Copy files
# can't exclude deps from . so we are copying everything by hand
COPY src/bw/loading loading
COPY src/bw/lua lua
COPY src/bw/misc misc
COPY src/common/api api
COPY src/common/confs confs
COPY src/common/core core_plugins
COPY src/common/db db
COPY src/common/gen gen
COPY src/common/helpers helpers
COPY src/common/settings.json settings.json
COPY src/common/utils utils
COPY src/core core
COPY src/ui ui
COPY src/autoconf autoconf
COPY src/VERSION VERSION
COPY misc/config.yml.example config.yml.example

FROM quay.io/centos/centos:stream8@sha256:5917fa6bdbced823c488264ba03f1cfab852c15b5e47714fc8c9a074adc7cfdd

# Set default umask to prevent huge recursive chmod increasing the final image size
RUN umask 027

# Copy dependencies
COPY --from=builder --chown=0:101 /etc/nginx /etc/nginx
COPY --from=builder --chown=0:101 /usr/share/bunkerweb /usr/share/bunkerweb

WORKDIR /usr/share/bunkerweb

# Install fpm
RUN dnf update -y && \
    dnf install -y ruby ruby-devel redhat-rpm-config rpm-build && \
    gem install -N fpm

# Setup BW
RUN mkdir -p /etc/bunkerweb/configs /etc/bunkerweb/plugins /var/cache/bunkerweb /var/tmp/bunkerweb /var/run/bunkerweb /var/log/bunkerweb /var/lib/bunkerweb && \
    mv config.yml.example /etc/bunkerweb/ && \
    echo "Linux" > INTEGRATION && \
    find . -path deps -prune -o -type f -exec chmod 0740 {} \; && \
    find . -path deps -prune -o -type d -exec chmod 0750 {} \; && \
    chmod 755 /var/log/bunkerweb && \
    touch /var/log/bunkerweb/error.log /var/log/bunkerweb/access.log /var/log/bunkerweb/core.log /var/log/bunkerweb/core-access.log /var/log/bunkerweb/ui.log /var/log/bunkerweb/ui-access.log /var/log/bunkerweb/autoconf.log && \
    chmod 770 /var/cache/bunkerweb/ /var/tmp/bunkerweb/ /var/run/bunkerweb/ && \
    chmod 750 gen/main.py core/app/*.py core/app/routers/*.py autoconf/*.py ui/*.py ui/routes/*.py helpers/*.sh && \
    find core_plugins/*/jobs/* -type f -exec chmod 750 {} \; && \
    chmod 755 .

# Cleanup
RUN dnf -y --setopt=install_weak_deps=False autoremove && \
    dnf clean all && \
    rm -rf /var/cache/dnf

COPY --chmod=660 src/bw/misc/asn.mmdb /var/tmp/bunkerweb/asn.mmdb
COPY --chmod=660 src/bw/misc/country.mmdb /var/tmp/bunkerweb/country.mmdb

# Copy Linux files
COPY --chmod=740 src/linux/scripts scripts
COPY --chmod=740 src/linux/fpm.sh /usr/share/fpm.sh
COPY src/linux/fpm-ubuntu /usr/share/.fpm
COPY --chmod=644 src/linux/*.service /lib/systemd/system/
COPY --chmod=644 src/linux/bunkerweb.logrotate /etc/logrotate.d/bunkerweb

# Generate RPM at startup
VOLUME /data
WORKDIR /usr/share/
ENTRYPOINT [ "./fpm.sh", "rpm" ]
