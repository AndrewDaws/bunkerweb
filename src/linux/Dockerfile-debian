FROM debian:bullseye-slim

ENV OS=debian
ENV NGINX_VERSION 1.24.0

# Install fpm
RUN apt update && \
    apt install -y --no-install-recommends ruby ruby-dev && \
    gem install fpm

# Copy dependencies sources folder
COPY src/deps /tmp/bunkerweb/deps
COPY src/core/requirements.txt /tmp/req/requirements.txt
COPY src/ui/requirements.txt /tmp/req/requirements.txt.1
COPY src/common/gen/requirements.txt /tmp/req/requirements.txt.2
COPY src/common/db/requirements.txt /tmp/req/requirements.txt.3

WORKDIR /usr/share/bunkerweb

RUN mkdir -p deps && \
    cat /tmp/req/requirements.txt* > deps/requirements.txt && \
    rm -rf /tmp/req

# Nginx
RUN apt-get install gnupg2 ca-certificates wget -y && \
    echo "deb https://nginx.org/packages/debian/ bullseye nginx" > /etc/apt/sources.list.d/nginx.list && \
    echo "deb-src https://nginx.org/packages/debian/ bullseye nginx" >> /etc/apt/sources.list.d/nginx.list && \
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ABF5BD827BD9BF62 && \
    apt-get update && \
    apt-get install -y --no-install-recommends nginx=${NGINX_VERSION}-1~bullseye

# Compile and install dependencies
RUN apt install --no-install-recommends python3-pip bash libssl-dev git libpcre++-dev zlib1g-dev libxml2-dev libyajl-dev pkgconf libcurl4-openssl-dev libgeoip-dev liblmdb-dev apt-utils bash build-essential autoconf libtool automake g++ gcc libxml2-dev make musl-dev gnupg patch libreadline-dev libpcre3-dev libgd-dev -y && \
    export MAKEFLAGS="-j$(nproc)" && \
    pip3 install --no-cache-dir --upgrade pip && \
    pip3 install --no-cache-dir --upgrade pip-tools wheel setuptools && \
    #mkdir -p deps && \
    chmod +x /tmp/bunkerweb/deps/install.sh && \
    bash /tmp/bunkerweb/deps/install.sh && \
    mkdir deps/python && \
    pip install --no-cache-dir --require-hashes --target deps/python -r deps/requirements.txt

# Copy files
# can't exclude deps from . so we are copying everything by hand
COPY src/bw/loading loading
COPY src/bw/lua lua
COPY src/bw/misc misc
COPY src/common/api api
COPY src/common/cli cli
COPY src/common/confs confs
COPY src/common/core core_plugins
COPY src/common/db db
COPY src/common/gen gen
COPY src/common/helpers helpers
COPY src/common/settings.json settings.json
COPY src/common/utils utils
COPY src/core core
COPY src/ui ui
COPY src/VERSION VERSION

# Setup BW
RUN cp helpers/bwcli /usr/bin/ && \
    chmod 755 /usr/bin/bwcli && \
    mkdir -p /etc/bunkerweb/configs && \
    mkdir -p /var/cache/bunkerweb/ && \
    mkdir -p /etc/bunkerweb/plugins && \
    mkdir -p /var/tmp/bunkerweb/ && \
    mkdir -p /var/run/bunkerweb/ && \
    mkdir -p /var/log/bunkerweb/ && \
    mkdir -p /var/www/html && \
    mkdir -p /var/lib/bunkerweb && \
    echo "Linux" > INTEGRATION && \
    find /usr/share/bunkerweb -path ui/deps -prune -o -type f -exec chmod 0740 {} \; && \
    find /usr/share/bunkerweb -path ui/deps -prune -o -type d -exec chmod 0750 {} \; && \
    chmod 770 /var/cache/bunkerweb/ /var/tmp/bunkerweb/ /var/run/bunkerweb/ /var/log/bunkerweb/ && \
    chmod 750 gen/main.py core/app/*.py core/app/routers/*.py cli/main.py helpers/*.sh /var/www/ && \
    find core_plugins/*/jobs/* -type f -exec chmod 750 {} \; && \
    chmod 755 /usr/share/bunkerweb

# Copy Linux files
COPY src/linux/scripts scripts
COPY src/linux/fpm.sh /usr/share/fpm.sh
RUN chmod +x scripts/*.sh /usr/share/fpm.sh
COPY src/linux/fpm-debian /usr/share/.fpm
COPY src/linux/*.service /lib/systemd/system/

# Generate DEB at startup
VOLUME /data
WORKDIR /usr/share/
ENTRYPOINT ["./fpm.sh", "deb"]
